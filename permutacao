import time

def ordena(lista):
    if len(lista) > 1:
        meio = len(lista) // 2
        esquerda = lista[:meio]
        direita = lista[meio:]

        ordena(esquerda)
        ordena(direita)

        i = j = k = 0

        while i < len(esquerda) and j < len(direita):
            if esquerda[i] < direita[j]:
                lista[k] = esquerda[i]
                i += 1
            else:
                lista[k] = direita[j]
                j += 1
            k += 1


        while i < len(esquerda):
            lista[k] = esquerda[i]
            i += 1
            k += 1

        while j < len(direita):
            lista[k] = direita[j]
            j += 1
            k += 1

def permutacao(a, b):
    if len(a)==len(b):

        for i in range(len(a)):
            if a[i]==b[i]:
                x=True
            else:
                x=False
                break
        if x:
            return 'É Permutação'
        else:
            return 'Não é permutação'
    else:
        return 'Não é permutação'

            
            

# Exemplo de uso:
inicio=time.time()
L1 = [1, -3, 0, 4, -3, 13, 2]
L2= [-3, 2, 1, 4, 13, -3, 0]

ordena(L1)
ordena(L2)

permut=permutacao(L1, L2)
print(permut)
fim=time.time()

print('Tempo de execução: ', fim-inicio)
